//printing keyboard 2 with delay to screen 1 with lower to upper case 
//and to screen 2 with non-alphanumeric replaced with underscore
//start of stored input
DLABEL(kb1)
CBON()
//which keyboard
SET(R1,1)

//which screen
SET(R2, 1)

//R4 holds current char

//new line 
SET(R5, 10)

//address of start of kb1's message
SET(R6, kb1)

//address of start of kb1's message, use for incrementing
SET(R7, kb1)



//READING IN
LABEL(finding_newline_in_kb1_message)
//getchar
OPCODE(0x1411)

//check if curr char is a new line
CMP(R4,R5)
BZ(exit_finding_newline_in_kb1_message)

CMP(R4, R0)
BZ(finding_newline_in_kb1_message)

//store curr char into ram
STORE(R4,0,R7)
INC(R7,1)
BRR(finding_newline_in_kb1_message)



//---------------------------------------
//PRINTING
LABEL(exit_finding_newline_in_kb1_message)

ADD(R7, R0, R6)

LABEL(print_to_screen)

//printing to screen 1
SET(R2, 1)

LOAD(R4, 0, R7)
CMP(R4, R0)
BZ(finish_print)

//lower bound for lower case letter
SET(R8,97)
//upper bound for lower case letter
SET(R9,122)

//check if lowercase
CMP(R4,R8)
BL(not_lowercase)
CMP(R4,R9)
BUG(not_lowercase)

//lower case, so turn to upper case
DEC(R4, 32)

LABEL(not_lowercase)
//print to screen 1
OPCODE(0x1420)



//printing to screen 0
SET(R2, 0)

//reload current char
LOAD(R4, 0, R7)

//turn non-numeral/non-alphabet to underscore

//check if lowercase
CMP(R4,R8)
BL(NOT_LOWERCASE)
CMP(R4,R9)
BUG(NOT_LOWERCASE)

BRR(uppercase_lowercase_numeric)

LABEL(NOT_LOWERCASE)

//lower bound for upper case letter
SET(R8,65)
//upper bound for upper case letter
SET(R9,90)

CMP(R4,R8)
BL(NOT_UPPERCASE)
CMP(R4,R9)
BUG(NOT_UPPERCASE)

BRR(uppercase_lowercase_numeric)

LABEL(NOT_UPPERCASE)

//lower bound for numeric
SET(R8,48)
//upper bound for numeric
SET(R9,57)

CMP(R4,R8)
BL(NOT_NUMERIC)
CMP(R4,R9)
BUG(NOT_NUMERIC)

BRR(uppercase_lowercase_numeric)

//convert to underscore
LABEL(NOT_NUMERIC)
SET(R4, 95)

LABEL(uppercase_lowercase_numeric)
//print to screen 0
OPCODE(0x1420)
INC(R7,1)

BRR(print_to_screen)

LABEL(finish_print)
HALT()